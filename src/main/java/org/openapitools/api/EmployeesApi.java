/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.EmployeeRequest;
import org.openapitools.model.EmployeeResponse;
import org.openapitools.model.ErrorDetails;
import org.openapitools.model.UpdateRequest;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-08-03T06:05:18.357318-05:00[America/Chicago]")
@Validated
@Tag(name = "employees", description = "the employees API")
public interface EmployeesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /employees : add new employee
     *
     * @param employeeRequest  (required)
     * @return CREATED (status code 201)
     *         or Bad Request (status code 400)
     *         or Internal Server Error (status code 500)
     */
    @Operation(
        operationId = "addEmployee",
        summary = "add new employee",
        tags = { "Employee" },
        responses = {
            @ApiResponse(responseCode = "201", description = "CREATED", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = EmployeeResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorDetails.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorDetails.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/employees",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<EmployeeResponse> addEmployee(
        @Parameter(name = "EmployeeRequest", description = "", required = true) @Valid @RequestBody EmployeeRequest employeeRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"contractInfo\" : { \"job_description\" : \"job_description\", \"id\" : 1, \"salary\" : 5.962133916683182, \"job_title\" : \"job_title\" }, \"id\" : 0, \"age\" : 6, \"status\" : [ \"status\", \"status\" ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /employees/{id} : Get Employee
     *
     * @param id Employee Id (required)
     * @return SUCCESS (status code 200)
     *         or Bad Request (status code 400)
     *         or Internal Server Error (status code 500)
     */
    @Operation(
        operationId = "getEmployee",
        summary = "Get Employee",
        tags = { "Employee" },
        responses = {
            @ApiResponse(responseCode = "200", description = "SUCCESS", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = EmployeeResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorDetails.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorDetails.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/employees/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<EmployeeResponse> getEmployee(
        @Parameter(name = "id", description = "Employee Id", required = true) @PathVariable("id") Long id
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"contractInfo\" : { \"job_description\" : \"job_description\", \"id\" : 1, \"salary\" : 5.962133916683182, \"job_title\" : \"job_title\" }, \"id\" : 0, \"age\" : 6, \"status\" : [ \"status\", \"status\" ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /employees/{id} : Update status of an employees job application
     *
     * @param id Employee Id (required)
     * @param updateRequest  (required)
     * @return SUCCESS (status code 200)
     *         or Bad Request (status code 400)
     *         or Internal Server Error (status code 500)
     */
    @Operation(
        operationId = "updateEmployeeStatus",
        summary = "Update status of an employees job application",
        tags = { "Employee" },
        responses = {
            @ApiResponse(responseCode = "200", description = "SUCCESS", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = EmployeeResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorDetails.class))
            }),
            @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorDetails.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/employees/{id}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<EmployeeResponse> updateEmployeeStatus(
        @Parameter(name = "id", description = "Employee Id", required = true) @PathVariable("id") Long id,
        @Parameter(name = "UpdateRequest", description = "", required = true) @Valid @RequestBody UpdateRequest updateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"contractInfo\" : { \"job_description\" : \"job_description\", \"id\" : 1, \"salary\" : 5.962133916683182, \"job_title\" : \"job_title\" }, \"id\" : 0, \"age\" : 6, \"status\" : [ \"status\", \"status\" ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
